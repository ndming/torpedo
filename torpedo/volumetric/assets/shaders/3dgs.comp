#version 460

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout (set = 0, binding = 0, rgba8) uniform writeonly image2D outputImage;

struct GaussianPoint {
    vec3 position;
    vec3 color;
};

layout (set = 0, binding = 1, std140) readonly buffer PointCloud {
    GaussianPoint points[ ];
};

void main() {
    ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);
    ivec2 size = imageSize(outputImage);

    vec4 color = vec4(0.0, 0.0, 0.0, 1.0);

        if(gl_LocalInvocationID.x != 0 && gl_LocalInvocationID.y != 0)
        {
            color.x = float(texelCoord.x)/(size.x);
            color.y = float(texelCoord.y)/(size.y);	
        }
    
        imageStore(outputImage, texelCoord, color);
}
